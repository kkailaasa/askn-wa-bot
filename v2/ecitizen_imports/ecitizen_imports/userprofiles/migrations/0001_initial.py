# Generated by Django 4.2.1 on 2023-06-10 06:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import userprofiles.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('zones', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('spiritual_name', models.CharField(max_length=200, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('gender', userprofiles.fields.GenderField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('phone_number', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address_1', models.CharField(max_length=150)),
                ('postal_code', models.CharField(max_length=20)),
                ('under_18', models.BooleanField(null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.city')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.country')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.region')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zones.userzone')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalUserProfile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('spiritual_name', models.CharField(max_length=200, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('gender', userprofiles.fields.GenderField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('phone_number', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address_1', models.CharField(max_length=150)),
                ('postal_code', models.CharField(max_length=20)),
                ('under_18', models.BooleanField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('city', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cities_light.city')),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cities_light.country')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cities_light.region')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='zones.userzone')),
            ],
            options={
                'verbose_name': 'historical user profile',
                'verbose_name_plural': 'historical user profiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEPassportUserProfile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('epassport_number', models.CharField(db_index=True, max_length=20, null=True)),
                ('status', userprofiles.fields.EPassportStatusField(choices=[('V', 'Verified'), ('T', 'Temporary'), ('F', 'Free')], max_length=1, null=True)),
                ('month', userprofiles.fields.HexadecimalMonthField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, 'A'), (11, 'B'), (12, 'C')], null=True, validators=[django.core.validators.RegexValidator(code='invalid_hexadecimal_month', message='Enter a valid hexadecimal month value (1 to C).', regex='^[1-9A-C]$')])),
                ('year', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0, message='Minimum value should be 00.'), django.core.validators.MaxValueValidator(99, message='Maximum value should be 99.')])),
                ('gender', userprofiles.fields.GenderField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('country_iso', models.CharField(max_length=2, null=True)),
                ('number', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(10000, message='Minimum value should be 10000.'), django.core.validators.MaxValueValidator(99999, message='Maximum value should be 99999.')])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_profile', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userprofiles.userprofile')),
                ('zone', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='zones.userzone')),
            ],
            options={
                'verbose_name': 'historical e passport user profile',
                'verbose_name_plural': 'historical e passport user profiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='EPassportUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epassport_number', models.CharField(max_length=20, null=True, unique=True)),
                ('status', userprofiles.fields.EPassportStatusField(choices=[('V', 'Verified'), ('T', 'Temporary'), ('F', 'Free')], max_length=1, null=True)),
                ('month', userprofiles.fields.HexadecimalMonthField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, 'A'), (11, 'B'), (12, 'C')], null=True, validators=[django.core.validators.RegexValidator(code='invalid_hexadecimal_month', message='Enter a valid hexadecimal month value (1 to C).', regex='^[1-9A-C]$')])),
                ('year', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0, message='Minimum value should be 00.'), django.core.validators.MaxValueValidator(99, message='Maximum value should be 99.')])),
                ('gender', userprofiles.fields.GenderField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('country_iso', models.CharField(max_length=2, null=True)),
                ('number', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(10000, message='Minimum value should be 10000.'), django.core.validators.MaxValueValidator(99999, message='Maximum value should be 99999.')])),
                ('user_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='userprofiles.userprofile')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='zones.userzone')),
            ],
            options={
                'unique_together': {('zone', 'month', 'year', 'number')},
            },
        ),
    ]
